<import name="picker-column" src="./picker"></import>

<template>
  <!-- template里只能有一个根节点 -->
  <div class="picker" @click="hidePicker" style="background-color: {{show ? 'rgba(0,0,0,0.4)' : 'rgba(0,0,0,0)'}}">
    <div class="bottom {{show ? 'show' : 'hide'}}" @click="stop">
      <div class="control">
        <text class="cancel" @click="hidePicker">取消</text>
        <text class="confirm" @click="confirm">确定</text>
      </div>
      <div class="box" @click="stop">
        <picker-column
          locked="{{current !== $idx}}"
          for="item in range"
          key="{{labelKey}}"
          range="{{item}}"
          current="{{result[$idx]}}"
          index="{{$idx}}"></picker-column>
      </div>
    </div>
  </div>
</template>

<script>
export default {
  props: ['labelKey', 'range', 'currentRes'],
  // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖
  data: {
    show: true,
    current: null,
    result: []
  },
  onInit () {
    this.$on('changeScroll', (e) => {
      this.current = e.detail.index
    })
    this.$on('columnChangeFinish', (e) => {
      let {index, item} = e.detail
      this.result[index] = item
      this.$emit('columnChange', { index, item })
    })
    if (this.currentRes && this.currentRes.length === this.range.length) {
      this.result = [...this.currentRes]
    } else {
      this.result = this.range.map(item => item[0])
    }
  },
  hidePicker () {
    this.show = false
    console.log('hide')
    setTimeout(() => {
      this.$emit('hidePicker')
    }, 200)
  },
  stop(e) {
    e.stopPropagation()
  },
  confirm () {
    this.show = false
    setTimeout(() => {
      this.$emit('change', {res: this.result})
    }, 300)
  }
}
</script>

<style scoped>
  @keyframes slideIn {
    from {
      transform: translateY(100%);
    }
    to {
      transform: translateY(0);
    }
  }
  @keyframes slideMove{
    from {
      transform: translateY(0);
    }
    to {
      transform: translateY(100%);
    }
  }
  .picker {
    width: 100%;
    height: 100%;
    position: fixed;
    left: 0;
    top: 0;
    background-color: rgba(0,0,0,0.4);
  }
  .bottom {
    position: absolute;
    width: 100%;
    left: 0;
    flex-direction: column;
    bottom: 0;
    background-color: #fff;
  }
  .show {
    animation-name: slideIn;
    animation-duration: 300ms;
    animation-timing-function: ease;
  }
  .hide {
    animation-name: slideMove;
    animation-duration: 300ms;
    animation-timing-function: ease;
    animation-fill-mode: forwards;
  }
  .cancel, .confirm {
    padding: 12px 40px;
    color: #808080;
  }
  .confirm {
    color: #1188FF;
  }
  .control {
    width: 100%;
    height: 80px;
    justify-content: space-between;
    background-color: #fafafa;
  }
  .box {
    width: 100%;
    height: 420px;
  }
</style>
